#pragma once
#ifndef SRCC_LIBQLISTWIDGET_H
#define SRCC_LIBQLISTWIDGET_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QBrush QBrush;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDataStream QDataStream;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QFrame QFrame;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QListView QListView;
typedef struct QListWidget QListWidget;
typedef struct QListWidgetItem QListWidgetItem;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMimeData QMimeData;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QScrollBar QScrollBar;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

#ifdef __cplusplus
typedef QListWidgetItem::ItemType ItemType; // C++ enum
#else
typedef int ItemType; // C ABI enum
#endif

QListWidgetItem* QListWidgetItem_new();
QListWidgetItem* QListWidgetItem_new2(libqt_string text);
QListWidgetItem* QListWidgetItem_new3(QIcon* icon, libqt_string text);
QListWidgetItem* QListWidgetItem_new4(QListWidgetItem* other);
QListWidgetItem* QListWidgetItem_new5(QListWidget* listview);
QListWidgetItem* QListWidgetItem_new6(QListWidget* listview, int typeVal);
QListWidgetItem* QListWidgetItem_new7(libqt_string text, QListWidget* listview);
QListWidgetItem* QListWidgetItem_new8(libqt_string text, QListWidget* listview, int typeVal);
QListWidgetItem* QListWidgetItem_new9(QIcon* icon, libqt_string text, QListWidget* listview);
QListWidgetItem* QListWidgetItem_new10(QIcon* icon, libqt_string text, QListWidget* listview, int typeVal);
QListWidgetItem* QListWidgetItem_Clone(const QListWidgetItem* self);
void QListWidgetItem_OnClone(const QListWidgetItem* self, intptr_t slot);
QListWidgetItem* QListWidgetItem_QBaseClone(const QListWidgetItem* self);
QListWidget* QListWidgetItem_ListWidget(const QListWidgetItem* self);
void QListWidgetItem_SetSelected(QListWidgetItem* self, bool selectVal);
bool QListWidgetItem_IsSelected(const QListWidgetItem* self);
void QListWidgetItem_SetHidden(QListWidgetItem* self, bool hide);
bool QListWidgetItem_IsHidden(const QListWidgetItem* self);
int QListWidgetItem_Flags(const QListWidgetItem* self);
void QListWidgetItem_SetFlags(QListWidgetItem* self, int flags);
libqt_string QListWidgetItem_Text(const QListWidgetItem* self);
void QListWidgetItem_SetText(QListWidgetItem* self, libqt_string text);
QIcon* QListWidgetItem_Icon(const QListWidgetItem* self);
void QListWidgetItem_SetIcon(QListWidgetItem* self, QIcon* icon);
libqt_string QListWidgetItem_StatusTip(const QListWidgetItem* self);
void QListWidgetItem_SetStatusTip(QListWidgetItem* self, libqt_string statusTip);
libqt_string QListWidgetItem_ToolTip(const QListWidgetItem* self);
void QListWidgetItem_SetToolTip(QListWidgetItem* self, libqt_string toolTip);
libqt_string QListWidgetItem_WhatsThis(const QListWidgetItem* self);
void QListWidgetItem_SetWhatsThis(QListWidgetItem* self, libqt_string whatsThis);
QFont* QListWidgetItem_Font(const QListWidgetItem* self);
void QListWidgetItem_SetFont(QListWidgetItem* self, QFont* font);
int QListWidgetItem_TextAlignment(const QListWidgetItem* self);
void QListWidgetItem_SetTextAlignment(QListWidgetItem* self, int alignment);
void QListWidgetItem_SetTextAlignmentWithAlignment(QListWidgetItem* self, int alignment);
void QListWidgetItem_SetTextAlignment2(QListWidgetItem* self, int alignment);
QBrush* QListWidgetItem_Background(const QListWidgetItem* self);
void QListWidgetItem_SetBackground(QListWidgetItem* self, QBrush* brush);
QBrush* QListWidgetItem_Foreground(const QListWidgetItem* self);
void QListWidgetItem_SetForeground(QListWidgetItem* self, QBrush* brush);
int QListWidgetItem_CheckState(const QListWidgetItem* self);
void QListWidgetItem_SetCheckState(QListWidgetItem* self, int state);
QSize* QListWidgetItem_SizeHint(const QListWidgetItem* self);
void QListWidgetItem_SetSizeHint(QListWidgetItem* self, QSize* size);
QVariant* QListWidgetItem_Data(const QListWidgetItem* self, int role);
void QListWidgetItem_OnData(const QListWidgetItem* self, intptr_t slot);
QVariant* QListWidgetItem_QBaseData(const QListWidgetItem* self, int role);
void QListWidgetItem_SetData(QListWidgetItem* self, int role, QVariant* value);
void QListWidgetItem_OnSetData(QListWidgetItem* self, intptr_t slot);
void QListWidgetItem_QBaseSetData(QListWidgetItem* self, int role, QVariant* value);
bool QListWidgetItem_OperatorLesser(const QListWidgetItem* self, QListWidgetItem* other);
void QListWidgetItem_OnOperatorLesser(const QListWidgetItem* self, intptr_t slot);
bool QListWidgetItem_QBaseOperatorLesser(const QListWidgetItem* self, QListWidgetItem* other);
void QListWidgetItem_Read(QListWidgetItem* self, QDataStream* in);
void QListWidgetItem_OnRead(QListWidgetItem* self, intptr_t slot);
void QListWidgetItem_QBaseRead(QListWidgetItem* self, QDataStream* in);
void QListWidgetItem_Write(const QListWidgetItem* self, QDataStream* out);
void QListWidgetItem_OnWrite(const QListWidgetItem* self, intptr_t slot);
void QListWidgetItem_QBaseWrite(const QListWidgetItem* self, QDataStream* out);
void QListWidgetItem_OperatorAssign(QListWidgetItem* self, QListWidgetItem* other);
int QListWidgetItem_Type(const QListWidgetItem* self);
void QListWidgetItem_Delete(QListWidgetItem* self);

QListWidget* QListWidget_new(QWidget* parent);
QListWidget* QListWidget_new2();
QMetaObject* QListWidget_MetaObject(const QListWidget* self);
void* QListWidget_Metacast(QListWidget* self, const char* param1);
int QListWidget_Metacall(QListWidget* self, int param1, int param2, void** param3);
void QListWidget_OnMetacall(QListWidget* self, intptr_t slot);
int QListWidget_QBaseMetacall(QListWidget* self, int param1, int param2, void** param3);
libqt_string QListWidget_Tr(const char* s);
void QListWidget_SetSelectionModel(QListWidget* self, QItemSelectionModel* selectionModel);
void QListWidget_OnSetSelectionModel(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetSelectionModel(QListWidget* self, QItemSelectionModel* selectionModel);
QListWidgetItem* QListWidget_Item(const QListWidget* self, int row);
int QListWidget_Row(const QListWidget* self, QListWidgetItem* item);
void QListWidget_InsertItem(QListWidget* self, int row, QListWidgetItem* item);
void QListWidget_InsertItem2(QListWidget* self, int row, libqt_string label);
void QListWidget_InsertItems(QListWidget* self, int row, libqt_list /* of libqt_string */ labels);
void QListWidget_AddItem(QListWidget* self, libqt_string label);
void QListWidget_AddItemWithItem(QListWidget* self, QListWidgetItem* item);
void QListWidget_AddItems(QListWidget* self, libqt_list /* of libqt_string */ labels);
QListWidgetItem* QListWidget_TakeItem(QListWidget* self, int row);
int QListWidget_Count(const QListWidget* self);
QListWidgetItem* QListWidget_CurrentItem(const QListWidget* self);
void QListWidget_SetCurrentItem(QListWidget* self, QListWidgetItem* item);
void QListWidget_SetCurrentItem2(QListWidget* self, QListWidgetItem* item, int command);
int QListWidget_CurrentRow(const QListWidget* self);
void QListWidget_SetCurrentRow(QListWidget* self, int row);
void QListWidget_SetCurrentRow2(QListWidget* self, int row, int command);
QListWidgetItem* QListWidget_ItemAt(const QListWidget* self, QPoint* p);
QListWidgetItem* QListWidget_ItemAt2(const QListWidget* self, int x, int y);
QRect* QListWidget_VisualItemRect(const QListWidget* self, QListWidgetItem* item);
void QListWidget_SortItems(QListWidget* self);
void QListWidget_SetSortingEnabled(QListWidget* self, bool enable);
bool QListWidget_IsSortingEnabled(const QListWidget* self);
void QListWidget_EditItem(QListWidget* self, QListWidgetItem* item);
void QListWidget_OpenPersistentEditor(QListWidget* self, QListWidgetItem* item);
void QListWidget_ClosePersistentEditor(QListWidget* self, QListWidgetItem* item);
bool QListWidget_IsPersistentEditorOpen(const QListWidget* self, QListWidgetItem* item);
QWidget* QListWidget_ItemWidget(const QListWidget* self, QListWidgetItem* item);
void QListWidget_SetItemWidget(QListWidget* self, QListWidgetItem* item, QWidget* widget);
void QListWidget_RemoveItemWidget(QListWidget* self, QListWidgetItem* item);
libqt_list /* of QListWidgetItem* */ QListWidget_SelectedItems(const QListWidget* self);
libqt_list /* of QListWidgetItem* */ QListWidget_FindItems(const QListWidget* self, libqt_string text, int flags);
libqt_list /* of QListWidgetItem* */ QListWidget_Items(const QListWidget* self, QMimeData* data);
QModelIndex* QListWidget_IndexFromItem(const QListWidget* self, QListWidgetItem* item);
QListWidgetItem* QListWidget_ItemFromIndex(const QListWidget* self, QModelIndex* index);
void QListWidget_DropEvent(QListWidget* self, QDropEvent* event);
void QListWidget_OnDropEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDropEvent(QListWidget* self, QDropEvent* event);
void QListWidget_ScrollToItem(QListWidget* self, QListWidgetItem* item);
void QListWidget_Clear(QListWidget* self);
void QListWidget_ItemPressed(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemPressed(QListWidget* self, intptr_t slot);
void QListWidget_ItemClicked(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemClicked(QListWidget* self, intptr_t slot);
void QListWidget_ItemDoubleClicked(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemDoubleClicked(QListWidget* self, intptr_t slot);
void QListWidget_ItemActivated(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemActivated(QListWidget* self, intptr_t slot);
void QListWidget_ItemEntered(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemEntered(QListWidget* self, intptr_t slot);
void QListWidget_ItemChanged(QListWidget* self, QListWidgetItem* item);
void QListWidget_Connect_ItemChanged(QListWidget* self, intptr_t slot);
void QListWidget_CurrentItemChanged(QListWidget* self, QListWidgetItem* current, QListWidgetItem* previous);
void QListWidget_Connect_CurrentItemChanged(QListWidget* self, intptr_t slot);
void QListWidget_CurrentTextChanged(QListWidget* self, libqt_string currentText);
void QListWidget_Connect_CurrentTextChanged(QListWidget* self, intptr_t slot);
void QListWidget_CurrentRowChanged(QListWidget* self, int currentRow);
void QListWidget_Connect_CurrentRowChanged(QListWidget* self, intptr_t slot);
void QListWidget_ItemSelectionChanged(QListWidget* self);
void QListWidget_Connect_ItemSelectionChanged(QListWidget* self, intptr_t slot);
bool QListWidget_Event(QListWidget* self, QEvent* e);
void QListWidget_OnEvent(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseEvent(QListWidget* self, QEvent* e);
libqt_list /* of libqt_string */ QListWidget_MimeTypes(const QListWidget* self);
void QListWidget_OnMimeTypes(const QListWidget* self, intptr_t slot);
libqt_list /* of libqt_string */ QListWidget_QBaseMimeTypes(const QListWidget* self);
QMimeData* QListWidget_MimeData(const QListWidget* self, libqt_list /* of QListWidgetItem* */ items);
void QListWidget_OnMimeData(const QListWidget* self, intptr_t slot);
QMimeData* QListWidget_QBaseMimeData(const QListWidget* self, libqt_list /* of QListWidgetItem* */ items);
bool QListWidget_DropMimeData(QListWidget* self, int index, QMimeData* data, int action);
void QListWidget_OnDropMimeData(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseDropMimeData(QListWidget* self, int index, QMimeData* data, int action);
int QListWidget_SupportedDropActions(const QListWidget* self);
void QListWidget_OnSupportedDropActions(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseSupportedDropActions(const QListWidget* self);
libqt_string QListWidget_Tr2(const char* s, const char* c);
libqt_string QListWidget_Tr3(const char* s, const char* c, int n);
void QListWidget_SortItems1(QListWidget* self, int order);
void QListWidget_ScrollToItem2(QListWidget* self, QListWidgetItem* item, int hint);
QRect* QListWidget_VisualRect(const QListWidget* self, QModelIndex* index);
void QListWidget_OnVisualRect(const QListWidget* self, intptr_t slot);
QRect* QListWidget_QBaseVisualRect(const QListWidget* self, QModelIndex* index);
void QListWidget_ScrollTo(QListWidget* self, QModelIndex* index, int hint);
void QListWidget_OnScrollTo(QListWidget* self, intptr_t slot);
void QListWidget_QBaseScrollTo(QListWidget* self, QModelIndex* index, int hint);
QModelIndex* QListWidget_IndexAt(const QListWidget* self, QPoint* p);
void QListWidget_OnIndexAt(const QListWidget* self, intptr_t slot);
QModelIndex* QListWidget_QBaseIndexAt(const QListWidget* self, QPoint* p);
void QListWidget_DoItemsLayout(QListWidget* self);
void QListWidget_OnDoItemsLayout(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDoItemsLayout(QListWidget* self);
void QListWidget_Reset(QListWidget* self);
void QListWidget_OnReset(QListWidget* self, intptr_t slot);
void QListWidget_QBaseReset(QListWidget* self);
void QListWidget_SetRootIndex(QListWidget* self, QModelIndex* index);
void QListWidget_OnSetRootIndex(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetRootIndex(QListWidget* self, QModelIndex* index);
void QListWidget_ScrollContentsBy(QListWidget* self, int dx, int dy);
void QListWidget_OnScrollContentsBy(QListWidget* self, intptr_t slot);
void QListWidget_QBaseScrollContentsBy(QListWidget* self, int dx, int dy);
void QListWidget_DataChanged(QListWidget* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
void QListWidget_OnDataChanged(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDataChanged(QListWidget* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
void QListWidget_RowsInserted(QListWidget* self, QModelIndex* parent, int start, int end);
void QListWidget_OnRowsInserted(QListWidget* self, intptr_t slot);
void QListWidget_QBaseRowsInserted(QListWidget* self, QModelIndex* parent, int start, int end);
void QListWidget_RowsAboutToBeRemoved(QListWidget* self, QModelIndex* parent, int start, int end);
void QListWidget_OnRowsAboutToBeRemoved(QListWidget* self, intptr_t slot);
void QListWidget_QBaseRowsAboutToBeRemoved(QListWidget* self, QModelIndex* parent, int start, int end);
void QListWidget_MouseMoveEvent(QListWidget* self, QMouseEvent* e);
void QListWidget_OnMouseMoveEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseMouseMoveEvent(QListWidget* self, QMouseEvent* e);
void QListWidget_MouseReleaseEvent(QListWidget* self, QMouseEvent* e);
void QListWidget_OnMouseReleaseEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseMouseReleaseEvent(QListWidget* self, QMouseEvent* e);
void QListWidget_WheelEvent(QListWidget* self, QWheelEvent* e);
void QListWidget_OnWheelEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseWheelEvent(QListWidget* self, QWheelEvent* e);
void QListWidget_TimerEvent(QListWidget* self, QTimerEvent* e);
void QListWidget_OnTimerEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseTimerEvent(QListWidget* self, QTimerEvent* e);
void QListWidget_ResizeEvent(QListWidget* self, QResizeEvent* e);
void QListWidget_OnResizeEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseResizeEvent(QListWidget* self, QResizeEvent* e);
void QListWidget_DragMoveEvent(QListWidget* self, QDragMoveEvent* e);
void QListWidget_OnDragMoveEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDragMoveEvent(QListWidget* self, QDragMoveEvent* e);
void QListWidget_DragLeaveEvent(QListWidget* self, QDragLeaveEvent* e);
void QListWidget_OnDragLeaveEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDragLeaveEvent(QListWidget* self, QDragLeaveEvent* e);
void QListWidget_StartDrag(QListWidget* self, int supportedActions);
void QListWidget_OnStartDrag(QListWidget* self, intptr_t slot);
void QListWidget_QBaseStartDrag(QListWidget* self, int supportedActions);
void QListWidget_PaintEvent(QListWidget* self, QPaintEvent* e);
void QListWidget_OnPaintEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBasePaintEvent(QListWidget* self, QPaintEvent* e);
QModelIndex* QListWidget_MoveCursor(QListWidget* self, int cursorAction, int modifiers);
void QListWidget_OnMoveCursor(QListWidget* self, intptr_t slot);
QModelIndex* QListWidget_QBaseMoveCursor(QListWidget* self, int cursorAction, int modifiers);
void QListWidget_SetSelection(QListWidget* self, QRect* rect, int command);
void QListWidget_OnSetSelection(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetSelection(QListWidget* self, QRect* rect, int command);
void QListWidget_UpdateGeometries(QListWidget* self);
void QListWidget_OnUpdateGeometries(QListWidget* self, intptr_t slot);
void QListWidget_QBaseUpdateGeometries(QListWidget* self);
void QListWidget_SelectionChanged(QListWidget* self, QItemSelection* selected, QItemSelection* deselected);
void QListWidget_OnSelectionChanged(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSelectionChanged(QListWidget* self, QItemSelection* selected, QItemSelection* deselected);
void QListWidget_CurrentChanged(QListWidget* self, QModelIndex* current, QModelIndex* previous);
void QListWidget_OnCurrentChanged(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCurrentChanged(QListWidget* self, QModelIndex* current, QModelIndex* previous);
void QListWidget_KeyboardSearch(QListWidget* self, libqt_string search);
void QListWidget_OnKeyboardSearch(QListWidget* self, intptr_t slot);
void QListWidget_QBaseKeyboardSearch(QListWidget* self, libqt_string search);
int QListWidget_SizeHintForRow(const QListWidget* self, int row);
void QListWidget_OnSizeHintForRow(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseSizeHintForRow(const QListWidget* self, int row);
int QListWidget_SizeHintForColumn(const QListWidget* self, int column);
void QListWidget_OnSizeHintForColumn(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseSizeHintForColumn(const QListWidget* self, int column);
QAbstractItemDelegate* QListWidget_ItemDelegateForIndex(const QListWidget* self, QModelIndex* index);
void QListWidget_OnItemDelegateForIndex(const QListWidget* self, intptr_t slot);
QAbstractItemDelegate* QListWidget_QBaseItemDelegateForIndex(const QListWidget* self, QModelIndex* index);
QVariant* QListWidget_InputMethodQuery(const QListWidget* self, int query);
void QListWidget_OnInputMethodQuery(const QListWidget* self, intptr_t slot);
QVariant* QListWidget_QBaseInputMethodQuery(const QListWidget* self, int query);
void QListWidget_SelectAll(QListWidget* self);
void QListWidget_OnSelectAll(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSelectAll(QListWidget* self);
void QListWidget_UpdateEditorData(QListWidget* self);
void QListWidget_OnUpdateEditorData(QListWidget* self, intptr_t slot);
void QListWidget_QBaseUpdateEditorData(QListWidget* self);
void QListWidget_UpdateEditorGeometries(QListWidget* self);
void QListWidget_OnUpdateEditorGeometries(QListWidget* self, intptr_t slot);
void QListWidget_QBaseUpdateEditorGeometries(QListWidget* self);
void QListWidget_VerticalScrollbarAction(QListWidget* self, int action);
void QListWidget_OnVerticalScrollbarAction(QListWidget* self, intptr_t slot);
void QListWidget_QBaseVerticalScrollbarAction(QListWidget* self, int action);
void QListWidget_HorizontalScrollbarAction(QListWidget* self, int action);
void QListWidget_OnHorizontalScrollbarAction(QListWidget* self, intptr_t slot);
void QListWidget_QBaseHorizontalScrollbarAction(QListWidget* self, int action);
void QListWidget_VerticalScrollbarValueChanged(QListWidget* self, int value);
void QListWidget_OnVerticalScrollbarValueChanged(QListWidget* self, intptr_t slot);
void QListWidget_QBaseVerticalScrollbarValueChanged(QListWidget* self, int value);
void QListWidget_HorizontalScrollbarValueChanged(QListWidget* self, int value);
void QListWidget_OnHorizontalScrollbarValueChanged(QListWidget* self, intptr_t slot);
void QListWidget_QBaseHorizontalScrollbarValueChanged(QListWidget* self, int value);
void QListWidget_CloseEditor(QListWidget* self, QWidget* editor, int hint);
void QListWidget_OnCloseEditor(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCloseEditor(QListWidget* self, QWidget* editor, int hint);
void QListWidget_CommitData(QListWidget* self, QWidget* editor);
void QListWidget_OnCommitData(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCommitData(QListWidget* self, QWidget* editor);
void QListWidget_EditorDestroyed(QListWidget* self, QObject* editor);
void QListWidget_OnEditorDestroyed(QListWidget* self, intptr_t slot);
void QListWidget_QBaseEditorDestroyed(QListWidget* self, QObject* editor);
bool QListWidget_Edit2(QListWidget* self, QModelIndex* index, int trigger, QEvent* event);
void QListWidget_OnEdit2(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseEdit2(QListWidget* self, QModelIndex* index, int trigger, QEvent* event);
bool QListWidget_FocusNextPrevChild(QListWidget* self, bool next);
void QListWidget_OnFocusNextPrevChild(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseFocusNextPrevChild(QListWidget* self, bool next);
bool QListWidget_ViewportEvent(QListWidget* self, QEvent* event);
void QListWidget_OnViewportEvent(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseViewportEvent(QListWidget* self, QEvent* event);
void QListWidget_MousePressEvent(QListWidget* self, QMouseEvent* event);
void QListWidget_OnMousePressEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseMousePressEvent(QListWidget* self, QMouseEvent* event);
void QListWidget_MouseDoubleClickEvent(QListWidget* self, QMouseEvent* event);
void QListWidget_OnMouseDoubleClickEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseMouseDoubleClickEvent(QListWidget* self, QMouseEvent* event);
void QListWidget_DragEnterEvent(QListWidget* self, QDragEnterEvent* event);
void QListWidget_OnDragEnterEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDragEnterEvent(QListWidget* self, QDragEnterEvent* event);
void QListWidget_FocusInEvent(QListWidget* self, QFocusEvent* event);
void QListWidget_OnFocusInEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseFocusInEvent(QListWidget* self, QFocusEvent* event);
void QListWidget_FocusOutEvent(QListWidget* self, QFocusEvent* event);
void QListWidget_OnFocusOutEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseFocusOutEvent(QListWidget* self, QFocusEvent* event);
void QListWidget_KeyPressEvent(QListWidget* self, QKeyEvent* event);
void QListWidget_OnKeyPressEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseKeyPressEvent(QListWidget* self, QKeyEvent* event);
void QListWidget_InputMethodEvent(QListWidget* self, QInputMethodEvent* event);
void QListWidget_OnInputMethodEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseInputMethodEvent(QListWidget* self, QInputMethodEvent* event);
bool QListWidget_EventFilter(QListWidget* self, QObject* object, QEvent* event);
void QListWidget_OnEventFilter(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseEventFilter(QListWidget* self, QObject* object, QEvent* event);
QSize* QListWidget_MinimumSizeHint(const QListWidget* self);
void QListWidget_OnMinimumSizeHint(const QListWidget* self, intptr_t slot);
QSize* QListWidget_QBaseMinimumSizeHint(const QListWidget* self);
QSize* QListWidget_SizeHint(const QListWidget* self);
void QListWidget_OnSizeHint(const QListWidget* self, intptr_t slot);
QSize* QListWidget_QBaseSizeHint(const QListWidget* self);
void QListWidget_SetupViewport(QListWidget* self, QWidget* viewport);
void QListWidget_OnSetupViewport(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetupViewport(QListWidget* self, QWidget* viewport);
void QListWidget_ContextMenuEvent(QListWidget* self, QContextMenuEvent* param1);
void QListWidget_OnContextMenuEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseContextMenuEvent(QListWidget* self, QContextMenuEvent* param1);
void QListWidget_ChangeEvent(QListWidget* self, QEvent* param1);
void QListWidget_OnChangeEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseChangeEvent(QListWidget* self, QEvent* param1);
int QListWidget_DevType(const QListWidget* self);
void QListWidget_OnDevType(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseDevType(const QListWidget* self);
void QListWidget_SetVisible(QListWidget* self, bool visible);
void QListWidget_OnSetVisible(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetVisible(QListWidget* self, bool visible);
int QListWidget_HeightForWidth(const QListWidget* self, int param1);
void QListWidget_OnHeightForWidth(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseHeightForWidth(const QListWidget* self, int param1);
bool QListWidget_HasHeightForWidth(const QListWidget* self);
void QListWidget_OnHasHeightForWidth(const QListWidget* self, intptr_t slot);
bool QListWidget_QBaseHasHeightForWidth(const QListWidget* self);
QPaintEngine* QListWidget_PaintEngine(const QListWidget* self);
void QListWidget_OnPaintEngine(const QListWidget* self, intptr_t slot);
QPaintEngine* QListWidget_QBasePaintEngine(const QListWidget* self);
void QListWidget_KeyReleaseEvent(QListWidget* self, QKeyEvent* event);
void QListWidget_OnKeyReleaseEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseKeyReleaseEvent(QListWidget* self, QKeyEvent* event);
void QListWidget_EnterEvent(QListWidget* self, QEnterEvent* event);
void QListWidget_OnEnterEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseEnterEvent(QListWidget* self, QEnterEvent* event);
void QListWidget_LeaveEvent(QListWidget* self, QEvent* event);
void QListWidget_OnLeaveEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseLeaveEvent(QListWidget* self, QEvent* event);
void QListWidget_MoveEvent(QListWidget* self, QMoveEvent* event);
void QListWidget_OnMoveEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseMoveEvent(QListWidget* self, QMoveEvent* event);
void QListWidget_CloseEvent(QListWidget* self, QCloseEvent* event);
void QListWidget_OnCloseEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCloseEvent(QListWidget* self, QCloseEvent* event);
void QListWidget_TabletEvent(QListWidget* self, QTabletEvent* event);
void QListWidget_OnTabletEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseTabletEvent(QListWidget* self, QTabletEvent* event);
void QListWidget_ActionEvent(QListWidget* self, QActionEvent* event);
void QListWidget_OnActionEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseActionEvent(QListWidget* self, QActionEvent* event);
void QListWidget_ShowEvent(QListWidget* self, QShowEvent* event);
void QListWidget_OnShowEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseShowEvent(QListWidget* self, QShowEvent* event);
void QListWidget_HideEvent(QListWidget* self, QHideEvent* event);
void QListWidget_OnHideEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseHideEvent(QListWidget* self, QHideEvent* event);
bool QListWidget_NativeEvent(QListWidget* self, libqt_string eventType, void* message, intptr_t* result);
void QListWidget_OnNativeEvent(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseNativeEvent(QListWidget* self, libqt_string eventType, void* message, intptr_t* result);
void QListWidget_ChildEvent(QListWidget* self, QChildEvent* event);
void QListWidget_OnChildEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseChildEvent(QListWidget* self, QChildEvent* event);
void QListWidget_CustomEvent(QListWidget* self, QEvent* event);
void QListWidget_OnCustomEvent(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCustomEvent(QListWidget* self, QEvent* event);
void QListWidget_ConnectNotify(QListWidget* self, QMetaMethod* signal);
void QListWidget_OnConnectNotify(QListWidget* self, intptr_t slot);
void QListWidget_QBaseConnectNotify(QListWidget* self, QMetaMethod* signal);
void QListWidget_DisconnectNotify(QListWidget* self, QMetaMethod* signal);
void QListWidget_OnDisconnectNotify(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDisconnectNotify(QListWidget* self, QMetaMethod* signal);
void QListWidget_InitViewItemOption(const QListWidget* self, QStyleOptionViewItem* option);
void QListWidget_OnInitViewItemOption(const QListWidget* self, intptr_t slot);
void QListWidget_QBaseInitViewItemOption(const QListWidget* self, QStyleOptionViewItem* option);
int QListWidget_HorizontalOffset(const QListWidget* self);
void QListWidget_OnHorizontalOffset(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseHorizontalOffset(const QListWidget* self);
int QListWidget_VerticalOffset(const QListWidget* self);
void QListWidget_OnVerticalOffset(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseVerticalOffset(const QListWidget* self);
QRegion* QListWidget_VisualRegionForSelection(const QListWidget* self, QItemSelection* selection);
void QListWidget_OnVisualRegionForSelection(const QListWidget* self, intptr_t slot);
QRegion* QListWidget_QBaseVisualRegionForSelection(const QListWidget* self, QItemSelection* selection);
libqt_list /* of QModelIndex* */ QListWidget_SelectedIndexes(const QListWidget* self);
void QListWidget_OnSelectedIndexes(const QListWidget* self, intptr_t slot);
libqt_list /* of QModelIndex* */ QListWidget_QBaseSelectedIndexes(const QListWidget* self);
bool QListWidget_IsIndexHidden(const QListWidget* self, QModelIndex* index);
void QListWidget_OnIsIndexHidden(const QListWidget* self, intptr_t slot);
bool QListWidget_QBaseIsIndexHidden(const QListWidget* self, QModelIndex* index);
QSize* QListWidget_ViewportSizeHint(const QListWidget* self);
void QListWidget_OnViewportSizeHint(const QListWidget* self, intptr_t slot);
QSize* QListWidget_QBaseViewportSizeHint(const QListWidget* self);
int QListWidget_SelectionCommand(const QListWidget* self, QModelIndex* index, QEvent* event);
void QListWidget_OnSelectionCommand(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseSelectionCommand(const QListWidget* self, QModelIndex* index, QEvent* event);
void QListWidget_InitStyleOption(const QListWidget* self, QStyleOptionFrame* option);
void QListWidget_OnInitStyleOption(const QListWidget* self, intptr_t slot);
void QListWidget_QBaseInitStyleOption(const QListWidget* self, QStyleOptionFrame* option);
int QListWidget_Metric(const QListWidget* self, int param1);
void QListWidget_OnMetric(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseMetric(const QListWidget* self, int param1);
void QListWidget_InitPainter(const QListWidget* self, QPainter* painter);
void QListWidget_OnInitPainter(const QListWidget* self, intptr_t slot);
void QListWidget_QBaseInitPainter(const QListWidget* self, QPainter* painter);
QPaintDevice* QListWidget_Redirected(const QListWidget* self, QPoint* offset);
void QListWidget_OnRedirected(const QListWidget* self, intptr_t slot);
QPaintDevice* QListWidget_QBaseRedirected(const QListWidget* self, QPoint* offset);
QPainter* QListWidget_SharedPainter(const QListWidget* self);
void QListWidget_OnSharedPainter(const QListWidget* self, intptr_t slot);
QPainter* QListWidget_QBaseSharedPainter(const QListWidget* self);
void QListWidget_ResizeContents(QListWidget* self, int width, int height);
void QListWidget_OnResizeContents(QListWidget* self, intptr_t slot);
void QListWidget_QBaseResizeContents(QListWidget* self, int width, int height);
QSize* QListWidget_ContentsSize(const QListWidget* self);
void QListWidget_OnContentsSize(const QListWidget* self, intptr_t slot);
QSize* QListWidget_QBaseContentsSize(const QListWidget* self);
QRect* QListWidget_RectForIndex(const QListWidget* self, QModelIndex* index);
void QListWidget_OnRectForIndex(const QListWidget* self, intptr_t slot);
QRect* QListWidget_QBaseRectForIndex(const QListWidget* self, QModelIndex* index);
void QListWidget_SetPositionForIndex(QListWidget* self, QPoint* position, QModelIndex* index);
void QListWidget_OnSetPositionForIndex(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetPositionForIndex(QListWidget* self, QPoint* position, QModelIndex* index);
int QListWidget_State(const QListWidget* self);
void QListWidget_OnState(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseState(const QListWidget* self);
void QListWidget_SetState(QListWidget* self, int state);
void QListWidget_OnSetState(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetState(QListWidget* self, int state);
void QListWidget_ScheduleDelayedItemsLayout(QListWidget* self);
void QListWidget_OnScheduleDelayedItemsLayout(QListWidget* self, intptr_t slot);
void QListWidget_QBaseScheduleDelayedItemsLayout(QListWidget* self);
void QListWidget_ExecuteDelayedItemsLayout(QListWidget* self);
void QListWidget_OnExecuteDelayedItemsLayout(QListWidget* self, intptr_t slot);
void QListWidget_QBaseExecuteDelayedItemsLayout(QListWidget* self);
void QListWidget_SetDirtyRegion(QListWidget* self, QRegion* region);
void QListWidget_OnSetDirtyRegion(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetDirtyRegion(QListWidget* self, QRegion* region);
void QListWidget_ScrollDirtyRegion(QListWidget* self, int dx, int dy);
void QListWidget_OnScrollDirtyRegion(QListWidget* self, intptr_t slot);
void QListWidget_QBaseScrollDirtyRegion(QListWidget* self, int dx, int dy);
QPoint* QListWidget_DirtyRegionOffset(const QListWidget* self);
void QListWidget_OnDirtyRegionOffset(const QListWidget* self, intptr_t slot);
QPoint* QListWidget_QBaseDirtyRegionOffset(const QListWidget* self);
void QListWidget_StartAutoScroll(QListWidget* self);
void QListWidget_OnStartAutoScroll(QListWidget* self, intptr_t slot);
void QListWidget_QBaseStartAutoScroll(QListWidget* self);
void QListWidget_StopAutoScroll(QListWidget* self);
void QListWidget_OnStopAutoScroll(QListWidget* self, intptr_t slot);
void QListWidget_QBaseStopAutoScroll(QListWidget* self);
void QListWidget_DoAutoScroll(QListWidget* self);
void QListWidget_OnDoAutoScroll(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDoAutoScroll(QListWidget* self);
int QListWidget_DropIndicatorPosition(const QListWidget* self);
void QListWidget_OnDropIndicatorPosition(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseDropIndicatorPosition(const QListWidget* self);
void QListWidget_SetViewportMargins(QListWidget* self, int left, int top, int right, int bottom);
void QListWidget_OnSetViewportMargins(QListWidget* self, intptr_t slot);
void QListWidget_QBaseSetViewportMargins(QListWidget* self, int left, int top, int right, int bottom);
QMargins* QListWidget_ViewportMargins(const QListWidget* self);
void QListWidget_OnViewportMargins(const QListWidget* self, intptr_t slot);
QMargins* QListWidget_QBaseViewportMargins(const QListWidget* self);
void QListWidget_DrawFrame(QListWidget* self, QPainter* param1);
void QListWidget_OnDrawFrame(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDrawFrame(QListWidget* self, QPainter* param1);
void QListWidget_UpdateMicroFocus(QListWidget* self);
void QListWidget_OnUpdateMicroFocus(QListWidget* self, intptr_t slot);
void QListWidget_QBaseUpdateMicroFocus(QListWidget* self);
void QListWidget_Create(QListWidget* self);
void QListWidget_OnCreate(QListWidget* self, intptr_t slot);
void QListWidget_QBaseCreate(QListWidget* self);
void QListWidget_Destroy(QListWidget* self);
void QListWidget_OnDestroy(QListWidget* self, intptr_t slot);
void QListWidget_QBaseDestroy(QListWidget* self);
bool QListWidget_FocusNextChild(QListWidget* self);
void QListWidget_OnFocusNextChild(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseFocusNextChild(QListWidget* self);
bool QListWidget_FocusPreviousChild(QListWidget* self);
void QListWidget_OnFocusPreviousChild(QListWidget* self, intptr_t slot);
bool QListWidget_QBaseFocusPreviousChild(QListWidget* self);
QObject* QListWidget_Sender(const QListWidget* self);
void QListWidget_OnSender(const QListWidget* self, intptr_t slot);
QObject* QListWidget_QBaseSender(const QListWidget* self);
int QListWidget_SenderSignalIndex(const QListWidget* self);
void QListWidget_OnSenderSignalIndex(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseSenderSignalIndex(const QListWidget* self);
int QListWidget_Receivers(const QListWidget* self, const char* signal);
void QListWidget_OnReceivers(const QListWidget* self, intptr_t slot);
int QListWidget_QBaseReceivers(const QListWidget* self, const char* signal);
bool QListWidget_IsSignalConnected(const QListWidget* self, QMetaMethod* signal);
void QListWidget_OnIsSignalConnected(const QListWidget* self, intptr_t slot);
bool QListWidget_QBaseIsSignalConnected(const QListWidget* self, QMetaMethod* signal);
void QListWidget_Delete(QListWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
